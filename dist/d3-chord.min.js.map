{"version":3,"sources":["chordDirective.js"],"names":["angular","module","matrixFactory","chordMatrix","chordID","d","s","matrixIndex","source","index","t","target","chordLayout","layoutCache","_matrix","objs","entry","dataStore","indexHash","filter","reduce","matrix","update","groups","chords","this","forEach","group","_id","startAngle","endAngle","chord","Object","keys","i","length","j","obj","valueOf","value","data","func","layout","d3_chordLayout","map","addKey","key","name","addKeys","props","fun","resetKeys","groupTween","d3_arc","tween","cached","d3","interpolateObject","chordTween","d3_path","push","read","g","m","sname","sdata","svalue","stotal","k","n","tname","tdata","tvalue","ttotal","gname","gdata","gvalue","mtotal","m1","n1","m2","n2","d3ChordDirective","$window","colorPalette","restrict","template","replace","scope","config","dimension","bindToController","controllerAs","controller","$scope","$el","groupClick","event","preventDefault","stopPropagation","vm","callback","$$phase","$root","$apply","resetChords","chordMouseover","dimChords","showToolTip","$tooltip","show","tooltip","formatter","info","css","left","offsetX","top","offsetY","html","hideTooltip","hide","showLoading","$loading","hideLoading","handleEmptyMask","$emptyMask","gContainer","selectAll","style","p","renderChart","gEnter","enter","append","attr","on","colors","arc","text","select","transition","duration","attrTween","angle","r","Math","PI","innerRadius","exit","remove","path","getSize","dims","width","$container","clientWidth","height","ratio","split","reverse","Number","clientHeight","marg","resize","size","svg","find","scale","ordinal","range","padding","sortGroups","descending","sortSubgroups","ascending","item","c","node1","node2","items","weight1","weight2","outerRadius","radius","$watch","current","prev","addEventListener","factory","directive","$inject"],"mappings":"AAAA,cAAA,SAAWA,GAKTA,EAAQC,OAAO,gBACdD,SACH,SAAWA,GAGP,QAASE,KACL,GAAIC,GAAc,WAiHd,QAASC,GAAQC,GACb,GAAIC,GAAIC,EAAYF,EAAEG,OAAOC,OACzBC,EAAIH,EAAYF,EAAEM,OAAOF,MAC7B,OAAQH,GAAII,EAAKJ,EAAI,KAAOI,EAAIA,EAAI,KAAOJ,EAlH/C,GAEIM,GAAaC,EAFbC,KAAcC,KAAWC,KAAYC,KACrCV,KAAkBW,KAGlBC,EAAS,aACTC,EAAS,aAETC,IA2MJ,OAzMAA,GAAOC,OAAS,WACZR,KAAcC,KAAWC,KAEzBH,GAAgBU,UAAYC,WAE5BC,KAAKF,SAASG,QAAQ,SAAUC,GAC5Bd,EAAYU,OAAOI,EAAMC,MACrBC,WAAYF,EAAME,WAClBC,SAAUH,EAAMG,YAIxBL,KAAKD,SAASE,QAAQ,SAAUK,GAC5BlB,EAAYW,OAAOpB,EAAQ2B,KACvBvB,QACIoB,IAAKG,EAAMvB,OAAOoB,IAClBC,WAAYE,EAAMvB,OAAOqB,WACzBC,SAAUC,EAAMvB,OAAOsB,UAE3BnB,QACIiB,IAAKG,EAAMpB,OAAOiB,IAClBC,WAAYE,EAAMpB,OAAOkB,WACzBC,SAAUC,EAAMpB,OAAOmB,aAKnCvB,EAAcyB,OAAOC,KAAKf,EAE1B,KAAK,GAAIgB,GAAI,EAAGA,EAAI3B,EAAY4B,OAAQD,IAAK,CACpCpB,EAAQoB,KACTpB,EAAQoB,MAEZ,KAAK,GAAIE,GAAI,EAAGA,EAAI7B,EAAY4B,OAAQC,IACpCrB,EAAOE,EAAUE,OAAO,SAAUkB,GAC9B,MAAOlB,GAAOkB,EAAKnB,EAAUX,EAAY2B,IAAKhB,EAAUX,EAAY6B,OAExEpB,EAAQI,EAAOL,EAAMG,EAAUX,EAAY2B,IAAKhB,EAAUX,EAAY6B,KACtEpB,EAAMsB,QAAU,WAAc,OAAQb,KAAKc,OAC3CzB,EAAQoB,GAAGE,GAAKpB,EAIxB,MADAJ,GAAYS,OAAOP,GACZA,GAGXO,EAAOmB,KAAO,SAAUA,GAEpB,MADAvB,GAAYuB,EACLf,MAGXJ,EAAOF,OAAS,SAAUsB,GAEtB,MADAtB,GAASsB,EACFhB,MAGXJ,EAAOD,OAAS,SAAUqB,GAEtB,MADArB,GAASqB,EACFhB,MAGXJ,EAAOqB,OAAS,SAAUC,GAEtB,MADA/B,GAAc+B,EACPlB,MAGXJ,EAAOE,OAAS,WACZ,MAAOX,GAAYW,SAASqB,IAAI,SAAUjB,GAEtC,MADAA,GAAMC,IAAMrB,EAAYoB,EAAMlB,OACvBkB,KAIfN,EAAOG,OAAS,WACZ,MAAOZ,GAAYY,SAASoB,IAAI,SAAUb,GAItC,MAHAA,GAAMH,IAAMxB,EAAQ2B,GACpBA,EAAMvB,OAAOoB,IAAMrB,EAAYwB,EAAMvB,OAAOC,OAC5CsB,EAAMpB,OAAOiB,IAAMrB,EAAYwB,EAAMpB,OAAOF,OACrCsB,KAIfV,EAAOwB,OAAS,SAAUC,EAAKN,GACtBtB,EAAU4B,KACX5B,EAAU4B,IAASC,KAAMD,EAAKN,KAAMA,SAI5CnB,EAAO2B,QAAU,SAAUC,EAAOC,GAC9B,IAAK,GAAIhB,GAAI,EAAGA,EAAIjB,EAAUkB,OAAQD,IAClC,IAAK,GAAIE,GAAI,EAAGA,EAAIa,EAAMd,OAAQC,IAC9BX,KAAKoB,OAAO5B,EAAUiB,GAAGe,EAAMb,IAAKc,EAAMA,EAAIjC,EAAUiB,GAAIe,EAAMb,OAG1E,OAAOX,OAGXJ,EAAO8B,UAAY,WAEf,MADAjC,MACOO,MASXJ,EAAO+B,WAAa,SAAUC,GAC1B,MAAO,UAAUhD,EAAG6B,GAChB,GAAIoB,GACAC,EAAS1C,EAAYU,OAAOlB,EAAEuB,IAWlC,OARI0B,GADAC,EACQC,GAAGC,kBAAkBF,EAAQlD,GAE7BmD,GAAGC,mBACP5B,WAAYxB,EAAEwB,WACdC,SAAUzB,EAAEwB,YACbxB,GAGA,SAAUK,GACb,MAAO2C,GAAOC,EAAM5C,OAKhCW,EAAOqC,WAAa,SAAUC,GAC1B,MAAO,UAAUtD,EAAG6B,GAChB,GAAIoB,GAAO/B,EACPgC,EAAS1C,EAAYW,OAAOnB,EAAEuB,IAElC,IAAI2B,EACIlD,EAAEG,OAAOoB,MAAQ2B,EAAO/C,OAAOoB,MAC/B2B,GAAW/C,OAAQ+C,EAAO5C,OAAQA,OAAQ4C,EAAO/C,SAErD8C,EAAQE,GAAGC,kBAAkBF,EAAQlD,OAClC,CACH,GAAIQ,EAAYU,OAAQ,CACpBA,IACA,KAAK,GAAIuB,KAAOjC,GAAYU,OACxBgC,EAAS1C,EAAYU,OAAOuB,GACxBS,EAAO3B,MAAQvB,EAAEG,OAAOoB,KAAO2B,EAAO3B,MAAQvB,EAAEM,OAAOiB,KACvDL,EAAOqC,KAAKL,EAGhBhC,GAAOY,OAAS,GAChBoB,GAAW/C,OAAQe,EAAO,GAAIZ,OAAQY,EAAO,IAAMA,EAAO,IACtDlB,EAAEG,OAAOoB,MAAQ2B,EAAO/C,OAAOoB,MAC/B2B,GAAW/C,OAAQ+C,EAAO5C,OAAQA,OAAQ4C,EAAO/C,UAGrD+C,EAASlD,MAGbkD,GAASlD,CAGbiD,GAAQE,GAAGC,mBACPjD,QACIqB,WAAY0B,EAAO/C,OAAOqB,WAC1BC,SAAUyB,EAAO/C,OAAOqB,YAE5BlB,QACIkB,WAAY0B,EAAO5C,OAAOkB,WAC1BC,SAAUyB,EAAO5C,OAAOkB,aAE7BxB,GAGP,MAAO,UAAUK,GACb,MAAOiD,GAAQL,EAAM5C,OAKjCW,EAAOwC,KAAO,SAAUxD,GACpB,GAAIyD,GAAGC,IAoBP,OAlBI1D,GAAEG,QACFuD,EAAEC,MAAQ3D,EAAEG,OAAOoB,IACnBmC,EAAEE,MAAQ5D,EAAEG,OAAO+B,MACnBwB,EAAEG,QAAU7D,EAAEG,OAAO+B,MACrBwB,EAAEI,OAASrD,EAAQT,EAAEG,OAAOC,OAAOW,OAAO,SAAUgD,EAAGC,GAAK,MAAOD,GAAIC,GAAM,GAC7EN,EAAEO,MAAQjE,EAAEM,OAAOiB,IACnBmC,EAAEQ,MAAQlE,EAAEM,OAAO4B,MACnBwB,EAAES,QAAUnE,EAAEM,OAAO4B,MACrBwB,EAAEU,OAAS3D,EAAQT,EAAEM,OAAOF,OAAOW,OAAO,SAAUgD,EAAGC,GAAK,MAAOD,GAAIC,GAAM,KAE7EP,EAAI5C,EAAUb,EAAEuB,KAChBmC,EAAEW,MAAQZ,EAAEf,KACZgB,EAAEY,MAAQb,EAAEtB,KACZuB,EAAEa,OAASvE,EAAEkC,OAEjBwB,EAAEc,OAAS/D,EAAQM,OAAO,SAAU0D,EAAIC,GACpC,MAAOD,GAAKC,EAAG3D,OAAO,SAAU4D,EAAIC,GAAM,MAAOD,GAAKC,GAAO,IAC9D,GACIlB,GAGJ1C,EAGX,QACIlB,YAAaA,GAMrB,QAAS+E,GAAiBC,EAASjF,GAC/B,GAAIkF,IACA,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAE3D,QACIC,SAAU,KACVC,SAAAA,wQAKAC,SAAS,EACTC,OACIC,OAAQ,IACRC,UAAW,KAEfC,kBAAkB,EAClBC,aAAc,QACdC,YAAa,SAAS,WAAW,SAAUC,EAAQC,GA2D/C,QAASC,GAAW3F,GAChBmD,GAAGyC,MAAMC,iBACT1C,GAAGyC,MAAME,iBACT,IAAIV,GAASW,EAAGX,MACZA,GAAOY,UAAYZ,EAAOY,SAASL,aACnCP,EAAOY,SAASL,WAAW3F,GACtByF,EAAOQ,SAAYR,EAAOS,MAAMD,SAASR,EAAOU,UAEzDC,IAGJ,QAASC,GAAerG,GACpBmD,GAAGyC,MAAMC,iBACT1C,GAAGyC,MAAME,kBACTQ,EAAUtG,GACVuG,EAAYvG,GAGhB,QAASuG,GAAYvG,GACjBwG,EAASC,MACT,IAAIrB,GAASW,EAAGX,MAChB,IAAIA,EAAOsB,QAAQC,UAAW,CAC1B,GAAIC,GAAOxB,EAAOsB,QAAQC,UAAU3F,EAAOwC,KAAKxD,GAChDwG,GAASK,KAAMC,KAAM3D,GAAGyC,MAAMmB,QAAU,GAAIC,IAAK7D,GAAGyC,MAAMqB,QAAU,KAAMC,KAAKN,IAIvF,QAASO,KACLhE,GAAGyC,MAAMC,iBACT1C,GAAGyC,MAAME,kBACTU,EAASY,OACThB,IAGJ,QAASiB,KACLC,EAASb,OAGb,QAASc,KACLD,EAASF,OAGb,QAASI,GAAgBrF,GACrBsF,EAAWL,OACRjF,GAAmB,GAAbA,EAAKL,QAEV2F,EAAWhB,OAInB,QAASL,KACLjD,GAAGyC,MAAMC,iBACT1C,GAAGyC,MAAME,kBACT4B,EAAWC,UAAU,cAAcC,MAAM,UAAW,IAGxD,QAAStB,GAAUtG,GACfmD,GAAGyC,MAAMC,iBACT1C,GAAGyC,MAAME,kBACT4B,EAAWC,UAAU,cAAcC,MAAM,UAAW,SAAUC,GAC1D,MAAI7H,GAAEG,OACM0H,EAAEtG,MAAQvB,EAAEuB,IAAO,GAAM,GAEzBsG,EAAE1H,OAAOoB,MAAQvB,EAAEuB,KAAOsG,EAAEvH,OAAOiB,MAAQvB,EAAEuB,IAAO,GAAM,KAK9E,QAASuG,GAAY1C,GACdA,EAAOjD,MACNoF,IACAC,EAAgBpC,EAAOjD,OAEvBkF,GAEJ,IAAIlF,GAAKiD,EAAOjD,QAChBnB,GAAOmB,KAAKA,GACPW,YACAH,SAAS,QAAS,UAClB1B,QACL,IAAIC,GAASwG,EAAWC,UAAU,WAC7BxF,KAAKnB,EAAOE,SAAU,SAAUlB,GAC7B,MAAOA,GAAEuB,MAGbwG,EAAS7G,EAAO8G,QACfC,OAAO,KACPC,KAAK,QAAS,QAEnBH,GAAOE,OAAO,QACTE,GAAG,QAASxC,GACZwC,GAAG,YAAa7B,GAChB6B,GAAG,WAAY/B,GACfwB,MAAM,OAAQ,SAAU5H,GACrB,MAAOoI,GAAOpI,EAAEuB,OAEnB2G,KAAK,IAAKG,GAEfN,EAAOE,OAAO,QACTL,MAAM,iBAAkB,QACxBA,MAAM,YAAa,OACnBM,KAAK,KAAM,SACXI,KAAK,SAAUtI,GACZ,MAAOA,GAAEuB,MAGjBL,EAAOqH,OAAO,QACTC,aAAaC,SAAS,KACtBC,UAAU,IAAK1H,EAAO+B,WAAWsF,IAEtCnH,EAAOqH,OAAO,QACTC,aACAC,SAAS,KACTP,KAAK,YAAa,SAAUlI,GACzBA,EAAE2I,OAAS3I,EAAEwB,WAAaxB,EAAEyB,UAAY,CACxC,IAAImH,GAAI,WAAuB,IAAV5I,EAAE2I,MAAcE,KAAKC,GAAK,IAAM,IACjDzI,EAAI,eAAiB0I,EAAc,IAAM,GAC7C,OAAOH,GAAIvI,GAAKL,EAAE2I,MAAQE,KAAKC,GAAK,eAAiB,gBAExDZ,KAAK,cAAe,SAAUlI,GAC3B,MAAOA,GAAE2I,MAAQE,KAAKC,GAAK,MAAQ,UAG3C5H,EAAO8H,OAAOT,OAAO,QAAQL,KAAK,OAAQ,UAC1ChH,EAAO8H,OAAOT,OAAO,QAAQU,SAE7B/H,EAAO8H,OAAOR,aAAaC,SAAS,KAC/Bb,MAAM,UAAW,GAAGqB,QAEzB,IAAI9H,GAASuG,EAAWC,UAAU,cAC7BxF,KAAKnB,EAAOG,SAAU,SAAUnB,GAC7B,MAAOA,GAAEuB,KAGjBJ,GAAO6G,QAAQC,OAAO,QACjBC,KAAK,QAAS,SACdN,MAAM,OAAQ,SAAU5H,GACrB,MAAOoI,GAAOpI,EAAEG,OAAOoB,OAE1B2G,KAAK,IAAKgB,GACVf,GAAG,YAAa9B,GAChB8B,GAAG,WAAYhB,GAEpBhG,EAAOqH,aAAaC,SAAS,KACxBC,UAAU,IAAK1H,EAAOqC,WAAW6F,IAEtC/H,EAAO6H,OAAOC,SAIlB,QAASE,KACL,GAAIC,MACA/D,EAAYU,EAAGV,UACfgE,EAAQC,EAAW,GAAGC,YAAYC,EAAAA,OAAOC,GAAS,EAAG,EAazD,OAZIpE,IACAoE,EAAQpE,EAAUqE,MAAM,KAAKC,UAAUpH,IAAIqH,QAC3CJ,EAASH,EAAQI,EAAM,GAAKA,EAAM,IAElCD,EAAOF,EAAW,GAAGO,aAErBR,EAAQ,KACRA,EAAQ,IACRG,EAAS,KAEbJ,EAAK,GAAKC,EAAQS,EAAK,GAAKA,EAAK,GACjCV,EAAK,GAAKI,EAASM,EAAK,GAAKA,EAAK,IACzBT,MAAAA,EAAOG,OAAAA,EAAQJ,KAAAA,GAG5B,QAASW,KACLC,EAAOb,IACPc,EAAI/B,MACAmB,MAAOW,EAAKX,MACZG,OAAQQ,EAAKR,SAvOrB,GAAIzD,GAAK3E,KACLkI,EAAa5D,EACbc,EAAW8C,EAAWY,KAAK,YAC3B5C,EAAWgC,EAAWY,KAAK,YAC3BzC,EAAa6B,EAAWY,KAAK,eAC7BJ,GAAQ,GAAI,GAAI,GAAI,IACpBE,EAAOb,IACPf,EAASjF,GAAGgH,MAAMC,UACjBC,MAAMtF,GAEPrD,EAAQyB,GAAGd,OAAOX,QACjB4I,QAAQ,KACRC,WAAWpH,GAAGqH,YACdC,cAActH,GAAGuH,WAClB1J,EAASnB,EAAcC,cACtBuC,OAAOX,GACPZ,OAAO,SAAU6J,EAAM/B,EAAGgC,GACvB,MAAQD,GAAKE,QAAUjC,EAAElG,MAAQiI,EAAKG,QAAUF,EAAElI,MAC7CiI,EAAKE,QAAUD,EAAElI,MAAQiI,EAAKG,QAAUlC,EAAElG,OAElD3B,OAAO,SAAUgK,EAAOnC,EAAGgC,GACxB,GAAI1I,GAAAA,MAYJ,OARIA,GAHC6I,EAAM,GAGCA,EAAMhK,OAAO,SAAU2C,EAAGM,GAC9B,MAAI4E,KAAMgC,EACClH,GAAKM,EAAEgH,QAAUhH,EAAEiH,SAEnBvH,GAAKM,EAAE6G,QAAUjC,EAAElG,KAAOsB,EAAEgH,QAAUhH,EAAEiH,UAEpD,GARK,GAUH/I,MAAOA,EAAOC,KAAM4I,KAGjChC,EAAeiB,EAAKZ,KAAK,GAAK,EAAK,IAEnCf,EAAMlF,GAAG8G,IAAI5B,MACZU,YAAYA,GACZmC,YAAYnC,EAAc,IAE3BG,EAAO/F,GAAG8G,IAAIvI,QACbyJ,OAAOpC,GAGRkB,EAAM9G,GAAGoF,OAAOe,EAAW,IAAIrB,OAAO,OACrCC,KAAK,QAAS,SACdA,MAAOmB,MAAOW,EAAKX,MAAQ,KAAMG,OAAQQ,EAAKR,OAAS,OACvDtB,KAAK,sBAAuB,YAC5BA,KAAK,UAAW,OAAS8B,EAAKX,MAAQ,IAAMW,EAAKR,QAElD9B,EAAauC,EAAIhC,OAAO,KACvBC,KAAK,QAAS,eACdA,KAAK,YAAa,cAAiB8B,EAAKZ,KAAK,GAAK,EAAKU,EAAK,IAAM,KAAQE,EAAKZ,KAAK,GAAK,EAAKU,EAAK,IAAM,IAC9GzC,KAmLA0C,IAEAtE,EAAO2F,OAAO,eAAgB,SAAUC,EAASC,GAC7CxD,EAAY/B,EAAGX,UACjB,GACFN,EAAQyG,iBAAiB,SAAU,WAC/BxB,SApehBpK,EAAQC,OAAO,YAAY4L,QAAQ,gBAAgB3L,GA8NnDF,EAAQC,OAAO,YAAY6L,UAAU,UAAU5G,GAC/CA,EAAiB6G,SAAW,UAAW,kBA0QxC/L","file":"d3-chord.min.js","sourcesContent":["(function (angular) {\n  \"use strict\";\n /**\n  * d3-chord module\n  */\n  angular.module('d3-chord', []);\n})(angular);\n(function (angular) {\n    \"use strict\";\n    angular.module('d3-chord').factory('matrixFactory',matrixFactory);\n    function matrixFactory(){\n        var chordMatrix = function () {\n\n            var _matrix = [], objs = [], entry = {}, dataStore = [], _id = 0;\n            var matrixIndex = [], indexHash = {};\n            var chordLayout, layoutCache;\n\n            var filter = function () { };\n            var reduce = function () { };\n\n            var matrix = {};\n\n            matrix.update = function () {\n                _matrix = [], objs = [], entry = {};\n\n                layoutCache = { groups: {}, chords: {} };\n\n                this.groups().forEach(function (group) {\n                    layoutCache.groups[group._id] = {\n                        startAngle: group.startAngle,\n                        endAngle: group.endAngle\n                    };\n                });\n\n                this.chords().forEach(function (chord) {\n                    layoutCache.chords[chordID(chord)] = {\n                        source: {\n                            _id: chord.source._id,\n                            startAngle: chord.source.startAngle,\n                            endAngle: chord.source.endAngle\n                        },\n                        target: {\n                            _id: chord.target._id,\n                            startAngle: chord.target.startAngle,\n                            endAngle: chord.target.endAngle\n                        }\n                    };\n                });\n\n                matrixIndex = Object.keys(indexHash);\n\n                for (var i = 0; i < matrixIndex.length; i++) {\n                    if (!_matrix[i]) {\n                        _matrix[i] = [];\n                    }\n                    for (var j = 0; j < matrixIndex.length; j++) {\n                        objs = dataStore.filter(function (obj) {\n                            return filter(obj, indexHash[matrixIndex[i]], indexHash[matrixIndex[j]]);\n                        });\n                        entry = reduce(objs, indexHash[matrixIndex[i]], indexHash[matrixIndex[j]]);\n                        entry.valueOf = function () { return +this.value };\n                        _matrix[i][j] = entry;\n                    }\n                }\n                chordLayout.matrix(_matrix);\n                return _matrix;\n            };\n\n            matrix.data = function (data) {\n                dataStore = data;\n                return this;\n            };\n\n            matrix.filter = function (func) {\n                filter = func;\n                return this;\n            };\n\n            matrix.reduce = function (func) {\n                reduce = func;\n                return this;\n            };\n\n            matrix.layout = function (d3_chordLayout) {\n                chordLayout = d3_chordLayout;\n                return this;\n            };\n\n            matrix.groups = function () {\n                return chordLayout.groups().map(function (group) {\n                    group._id = matrixIndex[group.index];\n                    return group;\n                });\n            };\n\n            matrix.chords = function () {\n                return chordLayout.chords().map(function (chord) {\n                    chord._id = chordID(chord);\n                    chord.source._id = matrixIndex[chord.source.index];\n                    chord.target._id = matrixIndex[chord.target.index];\n                    return chord;\n                });\n            };\n\n            matrix.addKey = function (key, data) {\n                if (!indexHash[key]) {\n                    indexHash[key] = { name: key, data: data || {} };\n                }\n            };\n\n            matrix.addKeys = function (props, fun) {\n                for (var i = 0; i < dataStore.length; i++) {\n                    for (var j = 0; j < props.length; j++) {\n                        this.addKey(dataStore[i][props[j]], fun ? fun(dataStore[i], props[j]) : {});\n                    }\n                }\n                return this;\n            };\n\n            matrix.resetKeys = function () {\n                indexHash = {};\n                return this;\n            };\n\n            function chordID(d) {\n                var s = matrixIndex[d.source.index];\n                var t = matrixIndex[d.target.index];\n                return (s < t) ? s + \"__\" + t : t + \"__\" + s;\n            }\n\n            matrix.groupTween = function (d3_arc) {\n                return function (d, i) {\n                    var tween;\n                    var cached = layoutCache.groups[d._id];\n\n                    if (cached) {\n                        tween = d3.interpolateObject(cached, d);\n                    } else {\n                        tween = d3.interpolateObject({\n                            startAngle: d.startAngle,\n                            endAngle: d.startAngle\n                        }, d);\n                    }\n\n                    return function (t) {\n                        return d3_arc(tween(t));\n                    };\n                };\n            };\n\n            matrix.chordTween = function (d3_path) {\n                return function (d, i) {\n                    var tween, groups;\n                    var cached = layoutCache.chords[d._id];\n\n                    if (cached) {\n                        if (d.source._id !== cached.source._id) {\n                            cached = { source: cached.target, target: cached.source };\n                        }\n                        tween = d3.interpolateObject(cached, d);\n                    } else {\n                        if (layoutCache.groups) {\n                            groups = [];\n                            for (var key in layoutCache.groups) {\n                                cached = layoutCache.groups[key];\n                                if (cached._id === d.source._id || cached._id === d.target._id) {\n                                    groups.push(cached);\n                                }\n                            }\n                            if (groups.length > 0) {\n                                cached = { source: groups[0], target: groups[1] || groups[0] };\n                                if (d.source._id !== cached.source._id) {\n                                    cached = { source: cached.target, target: cached.source };\n                                }\n                            } else {\n                                cached = d;\n                            }\n                        } else {\n                            cached = d;\n                        }\n\n                        tween = d3.interpolateObject({\n                            source: {\n                                startAngle: cached.source.startAngle,\n                                endAngle: cached.source.startAngle\n                            },\n                            target: {\n                                startAngle: cached.target.startAngle,\n                                endAngle: cached.target.startAngle\n                            }\n                        }, d);\n                    }\n\n                    return function (t) {\n                        return d3_path(tween(t));\n                    };\n                };\n            };\n\n            matrix.read = function (d) {\n                var g, m = {};\n\n                if (d.source) {\n                    m.sname = d.source._id;\n                    m.sdata = d.source.value;\n                    m.svalue = +d.source.value;\n                    m.stotal = _matrix[d.source.index].reduce(function (k, n) { return k + n; }, 0);\n                    m.tname = d.target._id;\n                    m.tdata = d.target.value;\n                    m.tvalue = +d.target.value;\n                    m.ttotal = _matrix[d.target.index].reduce(function (k, n) { return k + n; }, 0);\n                } else {\n                    g = indexHash[d._id];\n                    m.gname = g.name;\n                    m.gdata = g.data;\n                    m.gvalue = d.value;\n                }\n                m.mtotal = _matrix.reduce(function (m1, n1) {\n                    return m1 + n1.reduce(function (m2, n2) { return m2 + n2; }, 0);\n                }, 0);\n                return m;\n            };\n\n            return matrix;\n        };\n\n        return {\n            chordMatrix: chordMatrix\n        };\n    }\n\n    angular.module('d3-chord').directive('d3Chord',d3ChordDirective);\n    d3ChordDirective.$inject = [\"$window\", \"matrixFactory\"];\n    function d3ChordDirective($window, matrixFactory) {\n        let colorPalette = [\n            \"#52c3f1\", \"#f77b6b\", \"#e3d64a\", \"#6767da\", \"#68d4b2\", \"#369d97\",\n            \"#74d9ed\", \"#f8a13f\", \"#dae342\", \"#8d7be3\", \"#a4e59b\", \"#54becc\"\n        ];\n        return {\n            restrict: 'EA',\n            template: `<div id='d3-{{$id}}' class='d3-container d3-chord'>\n                        <div class='tooltip'></div>\n                        <div class='empty-mask'>未查询到数据</div>\n                        <div class='loading' >loading...</div>\n                       </div>`,\n            replace: true,\n            scope: {\n                config: \"=\",\n                dimension: \"=\"\n            },\n            bindToController: true,\n            controllerAs: \"chart\",\n            controller: ['$scope','$element',function ($scope, $el) {\n                let vm = this;\n                let $container = $el,\n                    $tooltip = $container.find(\".tooltip\"),\n                    $loading = $container.find(\".loading\"),\n                    $emptyMask = $container.find(\".empty-mask\");\n                let marg = [50, 50, 50, 50]; // TOP, RIGHT, BOTTOM, LEFT\n                let size = getSize();\n                let colors = d3.scale.ordinal()\n                    .range(colorPalette);\n\n                let chord = d3.layout.chord()\n                    .padding(0.02)\n                    .sortGroups(d3.descending)\n                    .sortSubgroups(d3.ascending);\n                let matrix = matrixFactory.chordMatrix()\n                    .layout(chord)\n                    .filter(function (item, r, c) {\n                        return (item.node1 === r.name && item.node2 === c.name) ||\n                            (item.node1 === c.name && item.node2 === r.name);\n                    })\n                    .reduce(function (items, r, c) {\n                        let value;\n                        if (!items[0]) {\n                            value = 0;\n                        } else {\n                            value = items.reduce(function (m, n) {\n                                if (r === c) {\n                                    return m + (n.weight1 + n.weight2);\n                                } else {\n                                    return m + (n.node1 === r.name ? n.weight1 : n.weight2);\n                                }\n                            }, 0);\n                        }\n                        return { value: value, data: items };\n                    });\n\n                let innerRadius = (size.dims[1] / 2) - 100;\n\n                let arc = d3.svg.arc()\n                    .innerRadius(innerRadius)\n                    .outerRadius(innerRadius + 20);\n\n                let path = d3.svg.chord()\n                    .radius(innerRadius);\n\n\n                let svg = d3.select($container[0]).append(\"svg\")\n                    .attr(\"class\", \"chart\")\n                    .attr({ width: size.width + \"px\", height: size.height + \"px\" })\n                    .attr(\"preserveAspectRatio\", \"xMinYMin\")\n                    .attr(\"viewBox\", \"0 0 \" + size.width + \" \" + size.height);\n\n                let gContainer = svg.append(\"g\")\n                    .attr(\"class\", \"g-container\")\n                    .attr(\"transform\", \"translate(\" + ((size.dims[0] / 2) + marg[3]) + \",\" + ((size.dims[1] / 2) + marg[0]) + \")\");\n                showLoading();\n\n                //group点击事件\n                function groupClick(d) {\n                    d3.event.preventDefault();\n                    d3.event.stopPropagation();\n                    let config = vm.config;\n                    if (config.callback && config.callback.groupClick) {\n                        config.callback.groupClick(d);\n                        if (!$scope.$$phase && !$scope.$root.$$phase) $scope.$apply();\n                    }\n                    resetChords();\n                }\n                //鼠标飘过事件\n                function chordMouseover(d) {\n                    d3.event.preventDefault();\n                    d3.event.stopPropagation();\n                    dimChords(d);\n                    showToolTip(d);\n                }\n                //显示tooltip\n                function showToolTip(d) {\n                    $tooltip.show();\n                    let config = vm.config;\n                    if (config.tooltip.formatter) {\n                        let info = config.tooltip.formatter(matrix.read(d));\n                        $tooltip.css({ left: d3.event.offsetX + 20, top: d3.event.offsetY + 20 }).html(info);\n                    }\n                }\n                //隐藏tooltip\n                function hideTooltip() {\n                    d3.event.preventDefault();\n                    d3.event.stopPropagation();\n                    $tooltip.hide();\n                    resetChords();\n                }\n                //显示Loading\n                function showLoading() {\n                    $loading.show();\n                }\n                //隐藏Loading\n                function hideLoading() {\n                    $loading.hide();\n                }\n                //处理“空数据”显示\n                function handleEmptyMask(data) {\n                    $emptyMask.hide();\n                    if(data&&data.length==0){\n                        //show empty mask\n                        $emptyMask.show();\n                    }\n                }\n                //重置所有Chord显示状态\n                function resetChords() {\n                    d3.event.preventDefault();\n                    d3.event.stopPropagation();\n                    gContainer.selectAll(\"path.chord\").style(\"opacity\", 0.9);\n                }\n                //高亮特定的Chord\n                function dimChords(d) {\n                    d3.event.preventDefault();\n                    d3.event.stopPropagation();\n                    gContainer.selectAll(\"path.chord\").style(\"opacity\", function (p) {\n                        if (d.source) { // COMPARE CHORD IDS\n                            return (p._id === d._id) ? 0.9 : 0.1;\n                        } else { // COMPARE GROUP IDS\n                            return (p.source._id === d._id || p.target._id === d._id) ? 0.9 : 0.1;\n                        }\n                    });\n                }\n                //渲染图形\n                function renderChart(config) {\n                    if(config.data){\n                        hideLoading();\n                        handleEmptyMask(config.data);\n                    }else{\n                        showLoading();\n                    }\n                    let data=config.data||[];\n                    matrix.data(data)\n                        .resetKeys()\n                        .addKeys(['node1', 'node2'])\n                        .update();\n                    let groups = gContainer.selectAll(\"g.group\")\n                        .data(matrix.groups(), function (d) {\n                            return d._id;\n                        });\n\n                    let gEnter = groups.enter()\n                        .append(\"g\")\n                        .attr(\"class\", \"group\");\n\n                    gEnter.append(\"path\")\n                        .on(\"click\", groupClick)\n                        .on(\"mouseover\", dimChords)\n                        .on(\"mouseout\", resetChords)\n                        .style(\"fill\", function (d) {\n                            return colors(d._id);\n                        })\n                        .attr(\"d\", arc);\n\n                    gEnter.append(\"text\")\n                        .style(\"pointer-events\", \"none\")\n                        .style(\"font-size\", \"9px\")\n                        .attr(\"dy\", \".35em\")\n                        .text(function (d) {\n                            return d._id;\n                        });\n\n                    groups.select(\"path\")\n                        .transition().duration(2000)\n                        .attrTween(\"d\", matrix.groupTween(arc));\n\n                    groups.select(\"text\")\n                        .transition()\n                        .duration(2000)\n                        .attr(\"transform\", function (d) {\n                            d.angle = (d.startAngle + d.endAngle) / 2;\n                            let r = \"rotate(\" + (d.angle * 180 / Math.PI - 90) + \")\";\n                            let t = \" translate(\" + (innerRadius + 26) + \")\";\n                            return r + t + (d.angle > Math.PI ? \" rotate(180)\" : \" rotate(0)\");\n                        })\n                        .attr(\"text-anchor\", function (d) {\n                            return d.angle > Math.PI ? \"end\" : \"begin\";\n                        });\n\n                    groups.exit().select(\"text\").attr(\"fill\", \"orange\");\n                    groups.exit().select(\"path\").remove();\n\n                    groups.exit().transition().duration(1000)\n                        .style(\"opacity\", 0).remove();\n\n                    let chords = gContainer.selectAll(\"path.chord\")\n                        .data(matrix.chords(), function (d) {\n                            return d._id;\n                        });\n\n                    chords.enter().append(\"path\")\n                        .attr(\"class\", \"chord\")\n                        .style(\"fill\", function (d) {\n                            return colors(d.source._id);\n                        })\n                        .attr(\"d\", path)\n                        .on(\"mouseover\", chordMouseover)\n                        .on(\"mouseout\", hideTooltip);\n\n                    chords.transition().duration(2000)\n                        .attrTween(\"d\", matrix.chordTween(path));\n\n                    chords.exit().remove();\n\n                }\n                //计算容器大小\n                function getSize() {\n                    let dims = []; // USABLE DIMENSIONS\n                    let dimension = vm.dimension;\n                    let width = $container[0].clientWidth,height,ratio = [1, 1];\n                    if (dimension) {\n                        ratio = dimension.split(\":\").reverse().map(Number);\n                        height = width * ratio[0] / ratio[1];\n                    }else{\n                        height=$container[0].clientHeight;\n                    }\n                    if (width < 50) {\n                        width = 500;\n                        height = 500;\n                    }\n                    dims[0] = width - marg[1] - marg[3]; // WIDTH\n                    dims[1] = height - marg[0] - marg[2]; // HEIGHT\n                    return { width, height, dims };\n                }\n                //重新调整图形大小\n                function resize() {\n                    size = getSize();\n                    svg.attr({\n                        width: size.width,\n                        height: size.height\n                    });\n                }\n                resize();\n\n                $scope.$watch(\"chart.config\", function (current, prev) {\n                    renderChart(vm.config);\n                },true);\n                $window.addEventListener(\"resize\", function () {\n                    resize();\n                });\n            }]\n        };\n    }\n})(angular);\n\n"],"sourceRoot":"/source/"}